@using Newtonsoft.Json
@using VSW.Core.Services.Messages
@{
    //Get messages from TempData
    var notes = TempData.ContainsKey(MessageDefaults.NotificationListKey)
        ? JsonConvert.DeserializeObject<IList<NotifyData>>(TempData[MessageDefaults.NotificationListKey].ToString())
        : null;
    if (notes != null)
    {
        foreach (var note in notes)
        {
            var cssStyle = "";
            switch (note.Type)
            {
                case NotifyType.Success:
                    cssStyle = "alert-success";
                    break;
                case NotifyType.Error:
                    cssStyle = "alert-danger";
                    break;
                case NotifyType.Warning:
                    cssStyle = "alert-warning";
                    break;
            }
            <div class="alert @cssStyle alert-dismissable">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                @if (note.Encode)
                {
                    <text>
                        @note.Message
                    </text>
                }
                else
                {
                    <text>
                        @Html.Raw(note.Message)
                    </text>
                }
            </div>
        }
    }
    //Get messages from TempData
    var notesAlert = ViewData.ModelState[MessageDefaults.NotificationAlertKey];
    if (notesAlert != null)
    {
        string text = "";
        foreach (var note in notesAlert.Errors)
        {
            if (string.IsNullOrEmpty(note.ErrorMessage)) continue;
            text += note.ErrorMessage + "<br/>";
        }
        if (!string.IsNullOrEmpty(text))
        {
            <script type="text/javascript">
                Alert('Thông báo', '@Html.Raw(text)');
            </script>
        }
    }
}